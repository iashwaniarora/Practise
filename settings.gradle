rootProject.name = 'practise'
include 'hibernate'
include 'java8'
include 'designpattern'
include 'designpattern:FactoryPattern'
findProject(':designpattern:FactoryPattern')?.name = 'FactoryPattern'
include 'designpattern:abstractfactory'
findProject(':designpattern:abstractfactory')?.name = 'abstractfactory'
include 'threads'
include 'hackerank'
findProject(':hackerank')?.name = 'hackerrankday1'
include 'hackerank:day1'
findProject(':hackerank:day1')?.name = 'day1'
include 'algorithms:sorting'
findProject(':algorithms:sorting')?.name = 'selectionsort'
include 'algorithms:sorting:selectionsort'
findProject(':algorithms:sorting:selectionsort')?.name = 'selectionsort'
include 'algorithms:sorting:bubblesort'
findProject(':algorithms:sorting:bubblesort')?.name = 'bubblesort'
include 'algorithms:sorting:insertionsort'
findProject(':algorithms:sorting:insertionsort')?.name = 'insertionsort'
include 'hackerank:algorithms:warmup:verybigsum'
findProject(':hackerank:algorithms:warmup:verybigsum')?.name = 'verybigsum'
include 'hackerank:algorithms:warmup:diagonaldifference'
findProject(':hackerank:algorithms:warmup:diagonaldifference')?.name = 'diagonaldifference'
include 'hackerank:algorithms:warmup:plusminus'
findProject(':hackerank:algorithms:warmup:plusminus')?.name = 'plusminus'
include 'hackerank:algorithms:warmup:staircase'
findProject(':hackerank:algorithms:warmup:staircase')?.name = 'staircase'
include 'practise:comparator'
findProject(':practise:comparator')?.name = 'comparator'
include 'practise:enum'
findProject(':practise:enum')?.name = 'enum'
include 'hackerank:algorithms:strings:reducedstring'
findProject(':hackerank:algorithms:strings:reducedstring')?.name = 'reducedstring'
include 'hackerank:algorithms:strings:camelcase'
findProject(':hackerank:algorithms:strings:camelcase')?.name = 'camelCaseString'
include 'hackerank:algorithms:strings:panagram'
findProject(':hackerank:algorithms:strings:panagram')?.name = 'panagram'
include 'hackerank:algorithms:strings:marsexploration'
findProject(':hackerank:algorithms:strings:marsexploration')?.name = 'marsexploration'
include 'hackerank:algorithms:strings:beautifulBinaryString'
findProject(':hackerank:algorithms:strings:beautifulBinaryString')?.name = 'beautifulbinarystring'
include 'hackerank:datastructures:arrays:arrays-ds'
findProject(':hackerank:datastructures:arrays:arrays-ds')?.name = 'arrays-ds'
include 'hackerank:datastructures:arrays:2darrays-ds'
findProject(':hackerank:datastructures:arrays:2darrays-ds')?.name = '2darrays-ds'
include 'hackerank:datastructures:arrays:leftrotation'
findProject(':hackerank:datastructures:arrays:leftrotation')?.name = 'leftrotation'
include 'hackerank:datastructures:arrays:sparsearrays'
findProject(':hackerank:datastructures:arrays:sparsearrays')?.name = 'sparseArray'
include 'practise:linkedlist'
findProject(':practise:linkedlist')?.name = 'linkedlist'
include 'hackerank:search:pairs'
findProject(':hackerank:search:pairs')?.name = 'pairs'
include 'practise:tree'
findProject(':practise:tree')?.name = 'tree'
include 'hackerank:datastructures:tree:preordertraversal'
findProject(':hackerank:datastructures:tree:preordertraversal')?.name = 'preordertraversal'
include 'hackerank:datastructures:tree:postordertraversal'
findProject(':hackerank:datastructures:tree:postordertraversal')?.name = 'postordertraversal'
include 'leetcode:problems:1Twosum'
findProject(':leetcode:problems:1Twosum')?.name = '1Twosum'
include 'practise:linkedlist_new'
findProject(':practise:linkedlist_new')?.name = 'linkedlist_new'
include 'leetcode:problems:zigzagsum'
findProject(':leetcode:problems:zigzagsum')?.name = 'zigzagsum'
include 'leetcode:problems:reverseinteger'
findProject(':leetcode:problems:reverseinteger')?.name = 'reverseinteger'
include 'leetcode:problems:stringtointeger'
findProject(':leetcode:problems:stringtointeger')?.name = 'stringtointeger'

